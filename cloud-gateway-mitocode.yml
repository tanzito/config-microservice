server:
  port: ${CUSTOM.SERVER.PORT:8090}

### Eureka Client configuration
eureka:
  instance:
    prefer-ip-address: true
    lease-expiration-duration-in-seconds: 30
  client:
    serviceUrl:
      defaultZone: ${EUREKA.HOST.SERVER:http://localhost:8761/eureka}
    registerWithEureka: true
    fetchRegistry: true
    healthcheck:
      enabled: true
    refresh:
      enable: true

### Cloud Gateway configuration
spring:
  cloud:
    gateway:
      routes:
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/products/**
          filters:
            - StripPrefix=2   
            - name: CircuitBreaker
              args:
                name: product-service
                statusCodes: 500, 404
                fallbackUri: forward:/api/another-service/
            - CustomFilterMitocode=Hello Mitocode, curso, arquitectura_microservicios
            # - name: Custom
              # args:
                # message: Hello Mitocode
                # cookieName: curso
                # cookieValue: arquitectura_microservicios
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
          filters:
            - StripPrefix=2
        - id: oauth-server
          uri: lb://oauth-server
          predicates:
            - Path=/api/security/**
          filters:
            - StripPrefix=2
        - id: shop-service
          uri: lb://shop-service
          predicates:
            - Path=/api/shop/**
          filters:
            - StripPrefix=2
        - id: client-service
          uri: lb://client-service
          predicates:
            - Path=/api/client/**
            #- Header=authorization-token, \d+
            ##- Query=curso
            #- Query=curso, mitocode
            #- Method=GET, POST, PUT
            #- Cookie=curso, mitocode
          filters:
            - StripPrefix=2
            - AddRequestHeader=SOME_TOKEN, MY_TOKEN
            - AddResponseHeader=SOME_TOKEN, MY_TOKEN
            - AddRequestParameter=SOME_TOKEN, MY_TOKEN
            - AddRequestParameter=SOME_VALUE, MITOCODE
            - SetResponseHeader=Content-Type, application/json

### Circuitbreaker configuration
resilience4j:
 circuitbreaker:
   configs:
     customConfig:
       sliding-window-size: 20
       failure-rate-threshold: 50
       wait-duration-in-open-state: 5s
       permitted-number-of-calls-in-half-open-state: 5
       slow-call-rate-threshold: 50
       slow-call-duration-threshold: 2s
   instances:  
     shop-service:
       base-config: customConfig
     user-service:
       base-config: customConfig
     product-service:
       base-config: customConfig
 timelimiter:
   configs:
     customConfig:
       timeout-duration: 2s
   instances:
     shop-service:
       base-config: customConfig
     user-service:
       base-config: customConfig
     product-service:
       base-config: customConfig

config:
  oauth2:
    accesstoken_validity: 1
    refreshtoken_validity: 30
    privateKey: 
      MIIEpAIBAAKCAQEAsBpHvLrkz6e3AfD4nQeCqC6BlBZf98A3aaw5Dju1N4FGVNSy
      eli1ypoTTC8C9TePCsBLL0XZH8MPq226MRf1exDnT1syY80RFivhqNAsmAk5ICdf
      OxLRHDGOCvGNcGvpNnUMR2EEgQvCqfXE7pOQDNm1vHIdqmtBgPAtyt7E/03rPj6d
      tGERMrtdlivexlIX+x6hIycJgQGgmEAnBHRgRTVOC0iLzKq7F/OGcwWrSe2Jf3gO

### Actuator info (/actuator/info)
info:
  app:
    app-name: Cloud Gateway Microservice
    description: Microservicio para el ruteo de los microservicios
    version: 1.0

management:
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /actuator